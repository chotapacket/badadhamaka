#define F_CPU 16000000UL  // Define CPU frequency as 16 MHz
#include <avr/io.h>
#include <util/delay.h>

// Function to control motor direction and duty cycle ramping
void motorControl(int direction)
{
	int i;

	if (direction == 1)
	{
		PORTB &= ~(1 << PB4);  // Set PB4 low for one direction
	}
	else
	{
		PORTB |= (1 << PB4);   // Set PB4 high for opposite direction
	}

	// Ramp up speed
	for (i = 0; i <= 255; i += 25)
	{
		OCR0 = i;
		_delay_ms(1000);
	}

	// Ramp down speed
	for (i = 255; i >= 0; i -= 25)
	{
		OCR0 = i;
		_delay_ms(1000);
	}
}

int main()
{
	DDRB |= (1 << PB3) | (1 << PB4);  // Set PB3 (OC0 - PWM output) and PB4 (Direction) as output
	TCCR0 = 0xE3;  // Timer0: Fast PWM, non-inverted mode, Prescaler = 64

	while(1)
	{
		motorControl(1); // Run motor in one direction
		_delay_ms(1000);

		motorControl(0); // Run motor in opposite direction
		_delay_ms(1000);
	}
}


/*AVR (ATmega16)
--------------
PB3 (OC0)  - IN2 (L293D)  → PWM (speed)
PB4        ---> IN1 (L293D)  →→→ Direction
VCC        ---> VCC1 (5V logic)
GND        ---> GND (common)

L293D
-----
OUT1 ↔ Motor Terminal 1
OUT2 ↔ Motor Terminal 2
VCC2 → Motor Power (e.g., 9V battery)
*/
